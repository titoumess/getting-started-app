name: build-docker
on: [push]
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        
      - name: Lister les fichiers
        run: ls -la

      - name: üìå Extraire la derni√®re version du tag Git
        id: get_version
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            LATEST_TAG="v1.0.0"
          fi
          echo "Dernier tag trouv√© : $LATEST_TAG"
          NEW_TAG=$(echo $LATEST_TAG | awk -F. -v OFS=. '{print $1,$2,$3+1}')
          echo "Nouveau tag g√©n√©r√© : $NEW_TAG"
          echo "new_version=$NEW_TAG" >> $GITHUB_ENV

      - name: Connexion √† Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Utilisation du secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Utilisation du secret

      - name: Build de l‚Äôimage Docker
        run: docker build -t tuto-git-actions .

      - name: Ex√©cuter `ls` dans un conteneur Docker
        run: docker run --rm tuto-git-actions ls -la

      - name: Lister les images Docker apr√®s le build
        run: docker images

      - name: Taguer l‚Äôimage pour Docker Hub
        run: docker tag tuto-git-actions:latest titouanmessager375/tuto-git-actions:latest

      - name: Pousser l‚Äôimage vers Docker Hub
        run: docker push titouanmessager375/tuto-git-actions:latest


###- checkout code (valid√©)
###- ls (valid√©)
###- docker build 
###- docker images
###- docker push
###(pas de credentials en clair)
